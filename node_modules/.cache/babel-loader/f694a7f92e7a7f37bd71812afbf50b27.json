{"ast":null,"code":"var _jsxFileName = \"/Users/ddinghwan/Documents/GitHub/nomadcoder/moviesitewithreact/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport styles from \"./button.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [coins, setCoins] = useState([]); //초기값은 빈 배열\n\n  const [krw_usd, setKRWex] = useState(0); //원화환율, 1원당 달러비율\n\n  const [mode, setMode] = useState(true); //코인 시세 받아오기\n\n  useEffect(() => {\n    fetch(\"https://api.coinpaprika.com/v1/tickers\") //api가연결되면네트워크 응답에서 가격정보를 받아옴\n    .then(response => response.json()) //json형태로변환\n    .then(json => {\n      // console.log(json);\n      setCoins(json);\n      console.log(json);\n    }); //json형태로 변환한걸 setCoins로 coins배열을 대체\n  }, []); //환율정보 받아오기\n\n  useEffect(() => {\n    fetch(\" https://api.manana.kr/exchange/price/KRW/1/USD.json\").then(response => response.json()).then(json => {\n      console.log(json);\n      setKRWex(json);\n      setLoading(false);\n    });\n  }, []); //onExchange\n\n  const onExChange = () => {\n    if (mode) {\n      setMode(false);\n    } else {\n      setMode(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"The Coins! \", loading ? null : `(${coins.length})`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onExChange,\n        children: mode ? \"USD\" : \"KRW\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: loading ? \"Loading...\" : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      children: mode ? coins.map((coin, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        children: coins.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 38\n      }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"b\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"IqjuAQ1kCSUG+PsGyKYWIdgBH/M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ddinghwan/Documents/GitHub/nomadcoder/moviesitewithreact/src/App.js"],"names":["useEffect","useState","styles","App","loading","setLoading","coins","setCoins","krw_usd","setKRWex","mode","setMode","fetch","then","response","json","console","log","onExChange","length","map","coin","index","name"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC,CAFa,CAE2B;;AACxC,QAAM,CAACO,OAAD,EAAUC,QAAV,IAAsBR,QAAQ,CAAC,CAAD,CAApC,CAHa,CAG4B;;AACzC,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,IAAD,CAAhC,CAJa,CAMb;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,KAAK,CAAC,wCAAD,CAAL,CAAgD;AAAhD,KACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EACuC;AADvC,KAEGF,IAFH,CAESE,IAAD,IAAU;AACd;AACAR,MAAAA,QAAQ,CAACQ,IAAD,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,KANH,EADc,CAOR;AACP,GARQ,EAQN,EARM,CAAT,CAPa,CAiBb;;AACAf,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,KAAK,CAAC,sDAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESE,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAN,MAAAA,QAAQ,CAACM,IAAD,CAAR;AACAV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KANH;AAOD,GARQ,EAQN,EARM,CAAT,CAlBa,CA4Bb;;AACA,QAAMa,UAAU,GAAG,MAAM;AACvB,QAAIR,IAAJ,EAAU;AACRC,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD,KAFD,MAEO;AACLA,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,GAND;;AAQA,sBACE;AAAA,4BACE;AAAA,gCAAgBP,OAAO,GAAG,IAAH,GAAW,IAAGE,KAAK,CAACa,MAAO,GAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAED,UAAjB;AAAA,kBAA8BR,IAAI,GAAG,KAAH,GAAW;AAA7C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAA,gBAASN,OAAO,GAAG,YAAH,GAAkB;AAAlC;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA,gBACGM,IAAI,GACHJ,KAAK,CAACc,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBAAiB;AAAA,kBAAShB,KAAK,CAACiB;AAAf;AAAA;AAAA;AAAA;AAAA,cAA3B,CADG,gBAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GArDQpB,G;;KAAAA,G;AAuDT,eAAeA,GAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport styles from \"./button.module.css\";\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [coins, setCoins] = useState([]); //초기값은 빈 배열\n  const [krw_usd, setKRWex] = useState(0); //원화환율, 1원당 달러비율\n  const [mode, setMode] = useState(true);\n\n  //코인 시세 받아오기\n  useEffect(() => {\n    fetch(\"https://api.coinpaprika.com/v1/tickers\") //api가연결되면네트워크 응답에서 가격정보를 받아옴\n      .then((response) => response.json()) //json형태로변환\n      .then((json) => {\n        // console.log(json);\n        setCoins(json);\n        console.log(json);\n      }); //json형태로 변환한걸 setCoins로 coins배열을 대체\n  }, []);\n\n  //환율정보 받아오기\n  useEffect(() => {\n    fetch(\" https://api.manana.kr/exchange/price/KRW/1/USD.json\")\n      .then((response) => response.json())\n      .then((json) => {\n        console.log(json);\n        setKRWex(json);\n        setLoading(false);\n      });\n  }, []);\n\n  //onExchange\n  const onExChange = () => {\n    if (mode) {\n      setMode(false);\n    } else {\n      setMode(true);\n    }\n  };\n\n  return (\n    <div>\n      <h1>The Coins! {loading ? null : `(${coins.length})`}</h1>\n      <div>\n        <button onClick={onExChange}>{mode ? \"USD\" : \"KRW\"}</button>\n      </div>\n      <strong>{loading ? \"Loading...\" : null}</strong>\n      <select>\n        {mode ? (\n          coins.map((coin, index) => <option>{coins.name}</option>)\n        ) : (\n          <option>b</option>\n        )}\n      </select>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}