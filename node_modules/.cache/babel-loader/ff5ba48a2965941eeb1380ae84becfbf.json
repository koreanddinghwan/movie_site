{"ast":null,"code":"var _jsxFileName = \"/Users/ddinghwan/Documents/GitHub/nomadcoder/moviesitewithreact/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport styles from \"./button.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [coins, setCoins] = useState([]); //초기값은 빈 배열\n\n  const [krw_usd, setKRWex] = useState(0);\n  useEffect(() => {\n    fetch(\"https://api.coinpaprika.com/v1/tickers\") //api가연결되면네트워크 응답에서 가격정보를 받아옴\n    .then(response => response.json()) //json형태로변환\n    .then(json => {\n      // console.log(json);\n      setCoins(json);\n      setLoading(false);\n    }); //json형태로 변환한걸 setCoins로 coins배열을 대체\n  }, []);\n  useEffect(() => {\n    fetch(\" https://api.manana.kr/exchange/price/KRW/1/KRW,USD.json\").then(response => response.json()).then(json => {\n      console.log(json);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"The Coins! \", loading ? null : `(${coins.length})`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: loading ? \"Loading...\" : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      children: coins.map((coin, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        children: [coin.name, \" (\", coin.symbol, \"):$\", coin.quotes.USD.price]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"wD3MWZKTw0cC1x3nKENyFK/+yp0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ddinghwan/Documents/GitHub/nomadcoder/moviesitewithreact/src/App.js"],"names":["useEffect","useState","styles","App","loading","setLoading","coins","setCoins","krw_usd","setKRWex","fetch","then","response","json","console","log","length","map","coin","index","name","symbol","quotes","USD","price"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC,CAFa,CAE2B;;AACxC,QAAM,CAACO,OAAD,EAAUC,QAAV,IAAsBR,QAAQ,CAAC,CAAD,CAApC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAAC,wCAAD,CAAL,CAAgD;AAAhD,KACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EACuC;AADvC,KAEGF,IAFH,CAESE,IAAD,IAAU;AACd;AACAN,MAAAA,QAAQ,CAACM,IAAD,CAAR;AACAR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KANH,EADc,CAOR;AACP,GARQ,EAQN,EARM,CAAT;AAUAL,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAAC,0DAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESE,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,KAJH;AAKD,GANQ,CAAT;AAQA,sBACE;AAAA,4BACE;AAAA,gCAAgBT,OAAO,GAAG,IAAH,GAAW,IAAGE,KAAK,CAACU,MAAO,GAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA,gBAASZ,OAAO,GAAG,YAAH,GAAkB;AAAlC;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,gBACGE,KAAK,CAACW,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACT;AAAA,mBACGD,IAAI,CAACE,IADR,QACgBF,IAAI,CAACG,MADrB,SACgCH,IAAI,CAACI,MAAL,CAAYC,GAAZ,CAAgBC,KADhD;AAAA,SAAaL,KAAb;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GApCQhB,G;;KAAAA,G;AAsCT,eAAeA,GAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport styles from \"./button.module.css\";\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [coins, setCoins] = useState([]); //초기값은 빈 배열\n  const [krw_usd, setKRWex] = useState(0);\n  useEffect(() => {\n    fetch(\"https://api.coinpaprika.com/v1/tickers\") //api가연결되면네트워크 응답에서 가격정보를 받아옴\n      .then((response) => response.json()) //json형태로변환\n      .then((json) => {\n        // console.log(json);\n        setCoins(json);\n        setLoading(false);\n      }); //json형태로 변환한걸 setCoins로 coins배열을 대체\n  }, []);\n\n  useEffect(() => {\n    fetch(\" https://api.manana.kr/exchange/price/KRW/1/KRW,USD.json\")\n      .then((response) => response.json())\n      .then((json) => {\n        console.log(json);\n      });\n  });\n\n  return (\n    <div>\n      <h1>The Coins! {loading ? null : `(${coins.length})`}</h1>\n\n      <strong>{loading ? \"Loading...\" : null}</strong>\n      <select>\n        {coins.map((coin, index) => (\n          <option key={index}>\n            {coin.name} ({coin.symbol}):${coin.quotes.USD.price}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}