{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ddinghwan/Documents/GitHub/movie_site/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ddinghwan/Documents/GitHub/movie_site/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/ddinghwan/Documents/GitHub/movie_site/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";import Movie from\"../components/Movie\";import style from\"./Home.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";function Home(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),movies=_useState4[0],setMovies=_useState4[1];var getMovies=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var json;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://yts.mx/api/v2/list_movies.json?minimum_rating=9.5&sort_by=year\");case 2:_context.next=4;return _context.sent.json();case 4:json=_context.sent;setMovies(json.data.movies);setLoading(false);case 7:case\"end\":return _context.stop();}}},_callee);}));return function getMovies(){return _ref.apply(this,arguments);};}();useEffect(function(){getMovies();},[]);console.log(movies);return/*#__PURE__*/_jsx(\"div\",{className:style.container,children:loading?/*#__PURE__*/_jsx(\"div\",{className:style.loader,children:/*#__PURE__*/_jsx(\"h1\",{children:\"Loading...\"})}):/*#__PURE__*/_jsx(\"div\",{className:style.movies,children:movies.map(function(movie){return/*#__PURE__*/_jsx(Movie,{id:movie.id,title_long:movie.title_long,medium_cover_image:movie.medium_cover_image,genres:movie.genres,summary:movie.summary},movie.id);})})});}export default Home;","map":{"version":3,"sources":["/Users/ddinghwan/Documents/GitHub/movie_site/src/routes/Home.js"],"names":["useEffect","useState","Movie","style","Home","loading","setLoading","movies","setMovies","getMovies","fetch","json","data","console","log","container","loader","map","movie","id","title_long","medium_cover_image","genres","summary"],"mappings":"0XAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,MAAOC,CAAAA,KAAP,KAAkB,qBAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,mBAAlB,C,2CAEA,QAASC,CAAAA,IAAT,EAAgB,CACd,cAA8BH,QAAQ,CAAC,IAAD,CAAtC,wCAAOI,OAAP,eAAgBC,UAAhB,eACA,eAA4BL,QAAQ,CAAC,EAAD,CAApC,yCAAOM,MAAP,eAAeC,SAAf,eACA,GAAMC,CAAAA,SAAS,0FAAG,kKAERC,CAAAA,KAAK,0EAFG,6CAKdC,IALc,UACVA,IADU,eAMhBH,SAAS,CAACG,IAAI,CAACC,IAAL,CAAUL,MAAX,CAAT,CACAD,UAAU,CAAC,KAAD,CAAV,CAPgB,sDAAH,kBAATG,CAAAA,SAAS,0CAAf,CASAT,SAAS,CAAC,UAAM,CACdS,SAAS,GACV,CAFQ,CAEN,EAFM,CAAT,CAGAI,OAAO,CAACC,GAAR,CAAYP,MAAZ,EAEA,mBACE,YAAK,SAAS,CAAEJ,KAAK,CAACY,SAAtB,UACGV,OAAO,cACN,YAAK,SAAS,CAAEF,KAAK,CAACa,MAAtB,uBACE,kCADF,EADM,cAKN,YAAK,SAAS,CAAEb,KAAK,CAACI,MAAtB,UACGA,MAAM,CAACU,GAAP,CAAW,SAACC,KAAD,qBACV,KAAC,KAAD,EACE,EAAE,CAAEA,KAAK,CAACC,EADZ,CAGE,UAAU,CAAED,KAAK,CAACE,UAHpB,CAIE,kBAAkB,CAAEF,KAAK,CAACG,kBAJ5B,CAKE,MAAM,CAAEH,KAAK,CAACI,MALhB,CAME,OAAO,CAAEJ,KAAK,CAACK,OANjB,EAEOL,KAAK,CAACC,EAFb,CADU,EAAX,CADH,EANJ,EADF,CAsBD,CACD,cAAef,CAAAA,IAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport Movie from \"../components/Movie\";\nimport style from \"./Home.module.css\";\n\nfunction Home() {\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const getMovies = async () => {\n    const json = await (\n      await fetch(\n        `https://yts.mx/api/v2/list_movies.json?minimum_rating=9.5&sort_by=year`\n      )\n    ).json();\n    setMovies(json.data.movies);\n    setLoading(false);\n  };\n  useEffect(() => {\n    getMovies();\n  }, []);\n  console.log(movies);\n\n  return (\n    <div className={style.container}>\n      {loading ? (\n        <div className={style.loader}>\n          <h1>Loading...</h1>\n        </div>\n      ) : (\n        <div className={style.movies}>\n          {movies.map((movie) => (\n            <Movie\n              id={movie.id}\n              key={movie.id}\n              title_long={movie.title_long}\n              medium_cover_image={movie.medium_cover_image}\n              genres={movie.genres}\n              summary={movie.summary}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}